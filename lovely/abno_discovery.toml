[manifest]
version = "1.0.0"
dump_lua = true
priority = 1

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "localize{type = 'other', key = 'undiscovered_'..(string.lower(_c.set)), set = _c.set, nodes = desc_nodes}"
position = "at"
payload = '''
if _c.set == "Joker" and _c.abno then
    localize{type = 'other', key = 'und_'.._c.key, set = _c.set, nodes = desc_nodes}
else
    localize{type = 'other', key = 'undiscovered_'..(string.lower(_c.set)), set = _c.set, nodes = desc_nodes}
end'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "full_UI_table.name = localize{type = 'name', set = 'Other', key = 'undiscovered_'..(string.lower(_c.set)), name_nodes = {}}"
position = "at"
payload = '''
if _c.set == "Joker" and _c.abno then
    full_UI_table.name = localize{type = 'name', key = 'und_'.._c.key, set = 'Other', name_nodes = {}, vars = specific_vars or {}}
else
    full_UI_table.name = localize{type = 'name', set = 'Other', key = 'undiscovered_'..(string.lower(_c.set)), name_nodes = {}}
end'''
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "if not self.config.center.discovered and (self.ability.consumeable or self.config.center.unlocked) and not self.config.center.demo and not self.bypass_discovery_center then"
position = "after"
payload = "if not (self.ability.set == \"Joker\" and self.config.center.abno) then"
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "shared_sprite:draw_shader('dissolve', nil, nil, nil, self.children.center, scale_mod, rotate_mod)"
position = "after"
payload = "end"
match_indent = true

[[patches]]
[patches.pattern]
target = '=[SMODS _ "src/card_draw.lua"]'
pattern = "if not self.config.center.discovered and (self.ability.consumeable or self.config.center.unlocked) and not self.config.center.demo and not self.bypass_discovery_center then"
position = "after"
payload = "if not (self.ability.set == \"Joker\" and self.config.center.abno) then"
match_indent = true

[[patches]]
[patches.pattern]
target = '=[SMODS _ "src/card_draw.lua"]'
pattern = "if self.ability.name == 'Invisible Joker' and (self.config.center.discovered or self.bypass_discovery_center) then"
position = "before"
payload = "end"
match_indent = true