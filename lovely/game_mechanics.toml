[manifest]
version = "1.0.0"
dump_lua = true
priority = 1

# Game ends at below 0 hands instead of 1
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "if G.GAME.chips - G.GAME.blind.chips >= 0 or G.GAME.current_round.hands_left < 1 then"
position = "at"
payload = "if to_big(G.GAME.chips) >= to_big(G.GAME.blind.chips) or G.GAME.current_round.hands_left <= 0 then"
match_indent = true

# Patches taken from Cryptid
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "elseif G.GAME.round_resets.blind == G.P_BLINDS.bl_big then"
position = "at"
payload = "elseif G.GAME.blind_on_deck == 'Big' then"
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "if G.GAME.round_resets.blind == G.P_BLINDS.bl_small then"
position = "at"
payload = "if G.GAME.blind_on_deck == 'Small' then"
match_indent = true

# Remove skipping for Ordeals
[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = "extras = create_UIBox_blind_tag(type, run_info)"
position = "at"
payload = '''
if not blind_choice.config.color and not G.GAME.modifiers.lobc_netzach then
    extras = create_UIBox_blind_tag(type, run_info)
end'''
match_indent = true

# Fix background crashing for non-bosses
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "if v.boss.showdown then"
position = "at"
payload = "if v.boss and v.boss.showdown then"
match_indent = true

# For "Hands and Discards do not reset" effects
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "G.GAME.current_round.discards_left = math.max(0, G.GAME.round_resets.discards + G.GAME.round_bonus.discards)"
position = "before"
payload = "if not G.GAME.lobc_no_hands_reset then"
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "G.GAME.current_round.hands_left = (math.max(1, G.GAME.round_resets.hands + G.GAME.round_bonus.next_hands))"
position = "after"
payload = '''
    if G.GAME.modifiers.lobc_netzach then
        G.GAME.current_round.hands_left = G.GAME.current_round.hands_left - (G.GAME.round_resets.ante > 6 and 2 or (G.GAME.round_resets.ante > 3 and 1 or 0))
        G.GAME.current_round.discards_left = G.GAME.current_round.discards_left - (G.GAME.round_resets.ante > 6 and 2 or (G.GAME.round_resets.ante > 3 and 1 or 0))
    end
end'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = "G.GAME.current_round.discards_left = math.max(0, G.GAME.round_resets.discards + G.GAME.round_bonus.discards)"
position = "before"
payload = "if not G.GAME.lobc_no_hands_reset or (G.GAME.lobc_no_hands_reset and G.GAME.round_resets.blind_states.Small ~= 'Defeated') then"
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = "G.GAME.current_round.hands_left = (math.max(1, G.GAME.round_resets.hands + G.GAME.round_bonus.next_hands))"
position = "after"
payload = '''
    if G.GAME.modifiers.lobc_netzach then
        G.GAME.current_round.hands_left = G.GAME.current_round.hands_left - (G.GAME.round_resets.ante > 6 and 2 or (G.GAME.round_resets.ante > 3 and 1 or 0))
        G.GAME.current_round.discards_left = G.GAME.current_round.discards_left - (G.GAME.round_resets.ante > 6 and 2 or (G.GAME.round_resets.ante > 3 and 1 or 0))
    end
end'''
match_indent = true

# Patches lifted straight from Cryptid (The Tax effect)
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "func = (function()  update_hand_text({delay = 0, immediate = true}, {mult = 0, chips = 0, chip_total = math.floor(hand_chips*mult), level = '', handname = ''});play_sound('button', 0.9, 0.6);return true end)"
position = "at"
payload = "func = (function()  update_hand_text({delay = 0, immediate = true}, {mult = 0, chips = 0, chip_total = G.GAME.blind.cry_cap_score and G.GAME.blind:cry_cap_score(math.floor(hand_chips*mult)) or math.floor(hand_chips*mult), level = '', handname = ''});play_sound('button', 0.9, 0.6);return true end)"
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "ease_to = G.GAME.chips + math.floor(hand_chips*mult),"
position = "at"
payload = "ease_to = G.GAME.chips + (G.GAME.blind.cry_cap_score and G.GAME.blind:cry_cap_score(math.floor(hand_chips*mult)) or math.floor(hand_chips*mult)),"
match_indent = true

[[patches]]
[patches.pattern]
target = 'functions/state_events.lua'
pattern = "ease_to = G.GAME.chips + math.floor(hand_chips * mult) * (e and e.antiscore and -1 or 1),"
position = 'at'
match_indent = true
payload = '''ease_to = G.GAME.chips + (G.GAME.blind.cry_cap_score and G.GAME.blind:cry_cap_score(math.floor(hand_chips*mult)) or math.floor(hand_chips*mult)) * (e and e.antiscore and -1 or 1),'''

[[patches]]
[patches.pattern]
target = 'blind.lua'
pattern = "self.hands_sub = G.GAME.round_resets.hands - 1"
position = 'at'
match_indent = true
payload = '''self.hands_sub = G.GAME.current_round.hands_left - 1'''

# Modify hand debuffed text
