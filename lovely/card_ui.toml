[manifest]
version = "1.0.0"
dump_lua = true
priority = 1

# Card badges
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "if self.seal then badges[#badges + 1] = string.lower(self.seal)..'_seal' end"
position = "before"
payload = '''
if self.config.center.abno and not self.config.center.discovered and self.area ~= G.jokers then badges.force_rarity = false end
if self.ability.laetitia_gift then badges[#badges + 1] = 'lobc_gift' end
if self.ability.price_of_silence_amplified then badges[#badges + 1] = 'lobc_amplified' end
if self.ability.child_galaxy_pebble then badges[#badges + 1] = 'lobc_pebble' end
if self.ability.big_bird_enchanted then badges[#badges + 1] = 'lobc_enchanted' end
if self.ability.plague_doctor_baptism then 
    if G.GAME.blind and G.GAME.blind.config.blind.key == "bl_lobc_whitenight" then
        badges[#badges + 1] = 'lobc_apostle'
    else
        if not G.GAME.pool_flags["whitenight_defeated"] then
            badges[#badges + 1] = 'lobc_blessed'
        else
            badges[#badges + 1] = 'lobc_blessed_wn'
        end
    end
end'''
match_indent = true

# Card info queue
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "if v == 'pinned_left' then info_queue[#info_queue+1] = {key = 'pinned_left', set = 'Other'} end"
position = "before"
payload = '''
if v == 'lobc_gift' then info_queue[#info_queue+1] = {key = 'lobc_gift', set = 'Other'} end
if v == 'lobc_amplified' then
    local count = lobc_get_usage_count("j_lobc_price_of_silence")
    info_queue[#info_queue+1] = {key = 'lobc_amplified'..(count < 4 and '_1' or ''), set = 'Other'}
end
if v == 'lobc_pebble' then
    local count = lobc_get_usage_count("j_lobc_child_galaxy")
    info_queue[#info_queue+1] = {key = 'lobc_pebble'..(count < 4 and '_1' or ''), set = 'Other'}
end
if v == 'lobc_enchanted' then
    local count = lobc_get_usage_count("j_lobc_big_bird")
    info_queue[#info_queue+1] = {key = 'lobc_enchanted'..(count < 2 and '_1' or ''), set = 'Other'}
end
if v == 'lobc_blessed' then info_queue[#info_queue+1] = {key = 'lobc_blessed', set = 'Other'} end
if v == 'lobc_blessed_wn' then info_queue[#info_queue+1] = {key = 'lobc_blessed_wn', set = 'Other'} end
if v == 'lobc_apostle' then info_queue[#info_queue+1] = {key = 'lobc_apostle', set = 'Other'} end'''
match_indent = true

# Card modifiers
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "elseif self.sprite_facing == 'back' then"
position = "before"
payload = '''
-- Lobotomy Corporation card modifiers
for _, v in ipairs(G.lobc_global_modifiers) do
    if self.ability[v] then
        G.lobc_shared_modifiers[v].role.draw_major = self
        G.lobc_shared_modifiers[v]:draw_shader('dissolve', nil, nil, nil, self.children.center)
        G.lobc_shared_modifiers[v]:draw_shader('voucher', nil, self.ARGS.send_to_shader, nil, self.children.center)
    end
end

-- Face for Lobotomy Corporation jokers
if self.children.mood then
    self.children.mood.role.draw_major = self
    self.children.mood:draw_shader('dissolve', 0, nil, nil, self.children.center, scale_mod, rotate_mod,nil, 0.1 + 0.03*math.sin(1.8*G.TIMERS.REAL),nil, 0.6)
    self.children.mood:draw_shader('dissolve', nil, nil, nil, self.children.center, scale_mod, rotate_mod)
end'''
match_indent = true